{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","super-rentals/tests/acceptance/super-rentals-test.js","super-rentals/tests/lint/app.lint-test.js","super-rentals/tests/lint/templates.template.lint-test.js","super-rentals/tests/lint/tests.lint-test.js","super-rentals/tests/test-helper.js","super-rentals/tests/unit/routes/about-test.js","super-rentals/tests/unit/routes/contact-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"super-rentals/tests/acceptance/super-rentals-test\", [\"qunit\", \"@ember/test-helpers\", \"ember-qunit\"], function (_qunit, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)(\"Acceptance | super rentals\", function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _qunit.test)(\"visiting /\", async function (assert) {\n      /*\n        enter key 를 치면 http://localhost:4200/ 를 browser 에 type 한다.\n      */\n      await (0, _testHelpers.visit)(\"/\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/\");\n      assert.dom(\"h2\").hasText(\"Welcome to Super Rentals!\");\n      /*\n        jombo class 안에 button link (a.button) 를 찾는다.\n      */\n\n      assert.dom(\".jumbo a.button\").hasText(\"About Us\");\n      await (0, _testHelpers.click)(\".jumbo a.button\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/about\");\n    });\n    (0, _qunit.test)(\"visiting /about\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/about\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/about\");\n      assert.dom(\"h2\").hasText(\"About Super Rentals\");\n      assert.dom(\".jumbo a.button\").hasText(\"Contact Us\");\n      await (0, _testHelpers.click)(\".jumbo a.button\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/getting-in-touch\");\n    });\n    (0, _qunit.test)(\"visiting /getting-in-touch\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/getting-in-touch\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/getting-in-touch\");\n      assert.dom(\"h2\").hasText(\"Contact Us\");\n      assert.dom(\"a.button\").hasText(\"About\");\n      await (0, _testHelpers.click)(\".jumbo a.button\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/about\");\n    });\n  });\n});","define(\"super-rentals/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/about.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/about.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/contact.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/contact.js should pass ESLint\\n\\n');\n  });\n});","define(\"super-rentals/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('super-rentals/templates/about.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'super-rentals/templates/about.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('super-rentals/templates/contact.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'super-rentals/templates/contact.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('super-rentals/templates/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'super-rentals/templates/index.hbs should pass TemplateLint.\\n\\n');\n  });\n});","define(\"super-rentals/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('acceptance/super-rentals-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/super-rentals-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/about-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/about-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/contact-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/contact-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"super-rentals/tests/test-helper\", [\"super-rentals/app\", \"super-rentals/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"super-rentals/tests/unit/routes/about-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | about', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:about');\n      assert.ok(route);\n    });\n  });\n});","define(\"super-rentals/tests/unit/routes/contact-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | contact', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:contact');\n      assert.ok(route);\n    });\n  });\n});","define('super-rentals/config/environment', [], function() {\n  var prefix = 'super-rentals';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('super-rentals/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}
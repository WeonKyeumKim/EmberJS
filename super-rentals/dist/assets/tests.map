{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","super-rentals/tests/acceptance/super-rentals-test.js","super-rentals/tests/integration/components/jumbo-test.js","super-rentals/tests/integration/components/nav-bar-test.js","super-rentals/tests/integration/components/rental-test.js","super-rentals/tests/lint/app.lint-test.js","super-rentals/tests/lint/templates.template.lint-test.js","super-rentals/tests/lint/tests.lint-test.js","super-rentals/tests/test-helper.js","super-rentals/tests/unit/routes/about-test.js","super-rentals/tests/unit/routes/contact-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"super-rentals/tests/acceptance/super-rentals-test\", [\"qunit\", \"@ember/test-helpers\", \"ember-qunit\"], function (_qunit, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)(\"Acceptance | super rentals\", function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _qunit.test)(\"visiting /\", async function (assert) {\n      /*\n        enter key 를 치면 http://localhost:4200/ 를 browser 에 type 한다.\n      */\n      await (0, _testHelpers.visit)(\"/\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/\");\n      assert.dom(\"nav\").exists();\n      /* nav-bar */\n\n      assert.dom(\"h1\").hasText(\"SuperRentals\");\n      /* nav-bar */\n\n      /* tag h2 를 찾는다.  */\n\n      assert.dom(\"h2\").hasText(\"Welcome to Super Rentals!\");\n      /* jumbo class 안에 button link (a.button) 를 찾는다. */\n\n      assert.dom(\".jumbo a.button\").hasText(\"About Us\");\n      await (0, _testHelpers.click)(\".jumbo a.button\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/about\");\n    });\n    (0, _qunit.test)(\"visiting /about\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/about\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/about\");\n      assert.dom(\"nav\").exists();\n      /* nav-bar */\n\n      assert.dom(\"h1\").hasText(\"SuperRentals\");\n      /* nav-bar */\n\n      assert.dom(\"h2\").hasText(\"About Super Rentals\");\n      assert.dom(\".jumbo a.button\").hasText(\"Contact Us\");\n      await (0, _testHelpers.click)(\".jumbo a.button\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/getting-in-touch\");\n    });\n    (0, _qunit.test)(\"visiting /getting-in-touch\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/getting-in-touch\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/getting-in-touch\");\n      assert.dom(\"nav\").exists();\n      /* nav-bar */\n\n      assert.dom(\"h1\").hasText(\"SuperRentals\");\n      /* nav-bar */\n\n      assert.dom(\"h2\").hasText(\"Contact Us\");\n      assert.dom(\"a.button\").hasText(\"About\");\n      await (0, _testHelpers.click)(\".jumbo a.button\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/about\");\n    });\n    (0, _qunit.test)(\"navigating using the nav-bar\", async function (assert) {\n      await (0, _testHelpers.visit)(\"/\");\n      assert.dom(\"nav\").exists();\n      assert.dom(\"nav a.menu-index\").hasText(\"SuperRentals\");\n      assert.dom(\"nav a.menu-about\").hasText(\"About\");\n      assert.dom(\"nav a.menu-contact\").hasText(\"Contact\");\n      await (0, _testHelpers.click)(\"nav a.menu-about\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/about\");\n      await (0, _testHelpers.click)(\"nav a.menu-contact\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/getting-in-touch\");\n      await (0, _testHelpers.click)(\"nav a.menu-index\");\n      assert.equal((0, _testHelpers.currentURL)(), \"/\");\n    });\n  });\n});","define(\"super-rentals/tests/integration/components/jumbo-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)(\"Integration | Component | jumbo\", function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)(\"it renders the content inside a jumbo header with a tomster\", async function (assert) {\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <Jumbo>Hello World</Jumbo>\n      */\n      {\n        id: \"10C8cDED\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[5,\\\"jumbo\\\",[],[[],[]],{\\\"statements\\\":[[0,\\\"Hello World\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\",\n        meta: {}\n      }));\n      assert.dom(\".jumbo\").exists();\n      assert.dom(\".jumbo\").hasText(\"Hello World\");\n      assert.dom(\".jumbo .tomster\").exists();\n    });\n    /*\n      not used\n    */\n\n    (0, _qunit.test)(\"it renders\", async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <Jumbo />\n      */\n      {\n        id: \"CdoKM4LF\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[5,\\\"jumbo\\\",[],[[],[]]]],\\\"hasEval\\\":false}\",\n        meta: {}\n      }));\n      assert.equal(this.element.textContent.trim(), \"\"); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <Jumbo>\n              template block text\n            </Jumbo>\n          \n      */\n      {\n        id: \"+2VZDJGX\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n      \\\"],[5,\\\"jumbo\\\",[],[[],[]],{\\\"statements\\\":[[0,\\\"\\\\n        template block text\\\\n      \\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false}\",\n        meta: {}\n      }));\n      assert.equal(this.element.textContent.trim(), \"template block text\");\n    });\n  });\n});","define(\"super-rentals/tests/integration/components/nav-bar-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)(\"Integration | Component | nav-bar\", function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)(\"it renders\", async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <NavBar />\n      */\n      {\n        id: \"qq/S826L\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[5,\\\"nav-bar\\\",[],[[],[]]]],\\\"hasEval\\\":false}\",\n        meta: {}\n      }));\n      assert.dom(\"h1\").hasText(\"SuperRentals\");\n    });\n    /*\n      original: not used\n    test('it renders', async function(assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n       await render(hbs`<NavBar />`);\n       assert.equal(this.element.textContent.trim(), '');\n       // Template block usage:\n      await render(hbs`\n        <NavBar>\n          template block text\n        </NavBar>\n      `);\n       assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n    */\n  });\n});","define(\"super-rentals/tests/integration/components/rental-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)(\"Integration | Component | rental\", function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)(\"it renders information about a rental property\", async function (assert) {\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n         <Rental />\n      */\n      {\n        id: \"dpQyOFwi\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\" \\\"],[5,\\\"rental\\\",[],[[],[]]]],\\\"hasEval\\\":false}\",\n        meta: {}\n      }));\n      assert.dom(\"article\").hasClass(\"rental\");\n      assert.dom(\"article h3\").hasText(\"Grand Old Mansion\");\n      assert.dom(\"article .detail.owner\").includesText(\"Veruca Salt\");\n      assert.dom(\"article .detail.type\").includesText(\"Standalone\");\n      assert.dom(\"article .detail.location\").includesText(\"San Francisco\");\n      assert.dom(\"article .detail.bedrooms\").includesText(\"15\");\n    });\n    /*\n      original: not used\n     test(\"it renders\", async function(assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n       await render(hbs`<Rental />`);\n       assert.equal(this.element.textContent.trim(), \"\");\n       // Template block usage:\n      await render(hbs`\n        <Rental>\n          template block text\n        </Rental>\n      `);\n       assert.equal(this.element.textContent.trim(), \"template block text\");\n    });\n     */\n  });\n});","define(\"super-rentals/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/about.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/about.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/contact.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/contact.js should pass ESLint\\n\\n');\n  });\n});","define(\"super-rentals/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('super-rentals/templates/about.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'super-rentals/templates/about.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('super-rentals/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'super-rentals/templates/application.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('super-rentals/templates/contact.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'super-rentals/templates/contact.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('super-rentals/templates/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'super-rentals/templates/index.hbs should pass TemplateLint.\\n\\n');\n  });\n});","define(\"super-rentals/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('acceptance/super-rentals-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/super-rentals-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/components/jumbo-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/jumbo-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/components/nav-bar-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/nav-bar-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/components/rental-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/rental-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/about-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/about-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/contact-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/contact-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"super-rentals/tests/test-helper\", [\"super-rentals/app\", \"super-rentals/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"super-rentals/tests/unit/routes/about-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | about', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:about');\n      assert.ok(route);\n    });\n  });\n});","define(\"super-rentals/tests/unit/routes/contact-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | contact', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:contact');\n      assert.ok(route);\n    });\n  });\n});","define('super-rentals/config/environment', [], function() {\n  var prefix = 'super-rentals';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('super-rentals/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}